apply plugin: 'com.android.application'

def secretProps = new Properties()
rootProject.file("secret.properties").withInputStream { secretProps.load(it) }

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        applicationId "io.github.tobyhs.weatherweight"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'ACCUWEATHER_API_KEY', "\"${secretProps['accuweatherApiKey']}\""
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        local {
            initWith buildTypes.release
            signingConfig signingConfigs.debug
            versionNameSuffix '-local'
        }

        debug {
            versionNameSuffix '-debug'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    viewBinding {
        enabled = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'

    implementation 'com.prokkypew:clearrecycleradapter:1.1.0'

    final daggerVersion = '2.25.4'
    [
            "com.google.dagger:dagger-compiler:$daggerVersion",
            "com.google.dagger:dagger-android-processor:$daggerVersion",
    ].each {
        annotationProcessor it
        testAnnotationProcessor it
    }
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"

    final autoValue = 'com.google.auto.value:auto-value:1.5.2'
    compileOnly autoValue
    annotationProcessor autoValue

    implementation 'com.google.code.gson:gson:2.8.6'

    final gsonValueVersion = '0.9'
    annotationProcessor "me.tatarka.gsonvalue:gsonvalue-processor:$gsonValueVersion"
    implementation "me.tatarka.gsonvalue:gsonvalue:$gsonValueVersion"

    final mosbyVersion = '3.1.1'
    implementation "com.hannesdorfmann.mosby3:mvp:$mosbyVersion"
    implementation "com.hannesdorfmann.mosby3:viewstate:$mosbyVersion"
    implementation "com.hannesdorfmann.mosby3:mvp-lce:$mosbyVersion"

    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation 'com.github.tobyhs:rxsecretary:0.1.0'
    implementation 'com.github.tobyhs:rxsecretary-android:0.1.0'

    final retrofitVersion = '2.8.1'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.1'
    implementation('org.aaronhe:threetenbp-gson-adapter:1.0.2') {
        transitive = false
    }

    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.11.0'
    testImplementation 'org.robolectric:robolectric:4.3.1'
}
